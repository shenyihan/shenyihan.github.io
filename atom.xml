<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>个人主页</title>
  
  <subtitle>Life doesn’t get easier，you just get stronger</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://shenyihan.github.io/"/>
  <updated>2017-12-30T04:52:57.473Z</updated>
  <id>https://shenyihan.github.io/</id>
  
  <author>
    <name>shenyihan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>zookeeper安装使用</title>
    <link href="https://shenyihan.github.io/2017/12/30/PageName/"/>
    <id>https://shenyihan.github.io/2017/12/30/PageName/</id>
    <published>2017-12-30T05:38:58.000Z</published>
    <updated>2017-12-30T04:52:57.473Z</updated>
    
    <content type="html"><![CDATA[<p>Zookeeper是一个协调服务，可以用它来作为配置维护、名字服务、分布式部署；<br>下面，我来分享一下在Linux下安装Zookeeper的整个步骤，让大家少走弯路。</p><p>一、Zookeeper下载<br>    wget <a href="http://mirror.bit.edu.cn/apache/zookeeper/zookeeper-3.4.9/zookeeper-3.4.9.tar.gz" target="_blank" rel="noopener">http://mirror.bit.edu.cn/apache/zookeeper/zookeeper-3.4.9/zookeeper-3.4.9.tar.gz</a></p><pre><code>[plain] view plain copy  print?[root@localhost 下载]# wget http://mirror.bit.edu.cn/apache/zookeeper/zookeeper-3.3.6/zookeeper-3.3.6.tar.gz  --2016-01-15 23:15:57--  http://mirror.bit.edu.cn/apache/zookeeper/zookeeper-3.3.6/zookeeper-3.3.6.tar.gz  正在解析主机 mirror.bit.edu.cn (mirror.bit.edu.cn)... 114.247.56.117  正在连接 mirror.bit.edu.cn (mirror.bit.edu.cn)|114.247.56.117|:80... 已连接。  已发出 HTTP 请求，正在等待回应... 200 OK  长度：11833706 (11M) [application/octet-stream]  正在保存至: “zookeeper-3.3.6.tar.gz”  100%[======================================================================================================================================================================================&gt;] 11,833,706   171KB/s 用时 68s      2016-01-15 23:17:07 (170 KB/s) - 已保存 “zookeeper-3.3.6.tar.gz” [11833706/11833706])  </code></pre><p>二、解压<br>    tar -zxvf /home/mgr/zookeeper-3.4.9.tar.gz<br>    [html] view plain copy  print?<br>    [root@localhost deploy]# tar -zxvf /home/lk/下载/zookeeper-3.3.6.tar.gz   </p><pre><code>解压完之后，会在deploy文件夹下面得到一个zookeeper-3.3.6的文件夹</code></pre><p>三、进入到conf目录</p><pre><code>[plain] view plain copy  print?[root@localhost deploy]# cd /opt/deploy/zookeeper-3.3.6/conf  </code></pre><p>四、拷贝zoo_samle.cfg为zoo.cfg</p><pre><code>[plain] view plain copy  print?[root@localhost conf]# cp zoo_sample.cfg zoo.cfg  </code></pre><p>五、编辑zoo.cfg文件</p><pre><code>[plain] view plain copy  print?[root@localhost conf]# vi zoo.cfg   修改为：[html] view plain copy  print?# The number of milliseconds of each tick  tickTime=2000  # The number of ticks that the initial  # synchronization phase can take  initLimit=10  # The number of ticks that can pass between  # sending a request and getting an acknowledgement  syncLimit=5  # the directory where the snapshot is stored.  dataDir=/usr/zookeeper  dataLogDir=/usr/zookeeper/log  # the port at which the clients will connect  clientPort=2181  server.1=192.168.32.129:2888:3888  </code></pre><p>六、设置环境变量<br>    export ZOOKEEPER_INSTALL=/home/mgr/zookeeper-3.4.9<br>    export PATH=$PATH:$ZOOKEEPER_INSTALL/bin<br>    [plain] view plain copy  print?<br>    [root@localhost conf]# export ZOOKEEPER_INSTALL=/opt/deploy/zookeeper-3.3.6<br>    [root@localhost conf]# export PATH=$PATH:$ZOOKEEPER_INSTALL/bin  </p><p>七、启动</p><pre><code>[plain] view plain copy  print?[root@localhost bin]# ./zkServer.sh start  JMX enabled by default  Using config: /opt/deploy/zookeeper-3.3.6/bin/../conf/zoo.cfg  Starting zookeeper ... STARTED  [root@localhost bin]#   </code></pre><p>八、测试zookeeper</p><pre><code>[plain] view plain copy  print?[root@localhost bin]# ./zkCli.sh -server 192.168.32.129:2181  如果是本地连接，那么不需要 -server 192.168.32.129:2181,默认是本地注意：如果出现拒绝连接，请检查如下：1、防火墙是否关闭  systemctl stop firewalld2、需要将192.168.32.129 映射到本地 /etc/hosts文件中，否则无法连接</code></pre><p>集群配置：<br>    在一个zookeeper集群中，只要半数以上的机器正常工作，整个集群即可处于正常工作的状态。<br>    例如：3台机器组成的集群，只要int(3/2)+1=2台机器正常工作即可。也就是说允许3台中的1台机器宕机</p><pre><code>1、设置vi  /etc/hosts加172.16.10.107 zookeeper-01172.16.10.164 zookeeper-02172.16.10.166 zookeeper-032、配置zoo.cfg 增加dataDir=/home/mgr/zookeeper-3.4.9/datadataLogDir=/home/mgr/zookeeper-3.4.9/logserver.1=zookeeper-01:2888:3888server.2=zookeeper-02:2888:3888server.3=zookeeper-03:2888:38883、在data下新建myid 内容分别为1/2/34、./zkServer.sh restart(重启)；./zkServer.sh status(查看状态)；./zkServer.sh stop(关闭)</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Zookeeper是一个协调服务，可以用它来作为配置维护、名字服务、分布式部署；&lt;br&gt;下面，我来分享一下在Linux下安装Zookeeper的整个步骤，让大家少走弯路。&lt;/p&gt;
&lt;p&gt;一、Zookeeper下载&lt;br&gt;    wget &lt;a href=&quot;http://mi
      
    
    </summary>
    
    
      <category term="服务配置" scheme="https://shenyihan.github.io/tags/%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>介绍资本公积金</title>
    <link href="https://shenyihan.github.io/2017/12/29/my-new-post/"/>
    <id>https://shenyihan.github.io/2017/12/29/my-new-post/</id>
    <published>2017-12-29T03:38:16.000Z</published>
    <updated>2017-12-30T04:42:16.309Z</updated>
    
    <content type="html"><![CDATA[<p>公积金就是从企业成立至今所获得的所有的利润中保留的一部分。<br>要理解资本公积金，必须结合 净资产，股本，未分配利润等 项目结合理解。<br>净资产=股本+资本公积金+未分配利润<br>举例来说：<br>公司1990年成立 股本是1千万。公司的净资产也是1千万。<br>一开始啥也没有，公积金就是零，未分配利润也是零。</p><p>5年后，90-95年公司总共获利2千万，净资产就变成了3千万。按照国家规定，利润的10%必须转成资本公积金。所以：<br>股本还是1千万，公积金就是2百万，未分配利润就是1千8百万。总计净资产3千万。<br>每股公积金要除以总股本，<br>所以每股公积金=0.2元。每股未分配利润1.8元，每股净资产3元。</p><p>95年，公司赚到了钱，应该给股东发红利了。根据公司法，股东只能分未分配利润，而股本和公积金是不能挪用的。因此公司最多派发1千8百万红利。最终决定向股东派发2百万红利。<br>分红之后：股本还是1千万，公积金2百万，未分配利润变成1千6百万，净资产变成2千8百万。</p><p>96年，公司上市，公司每股净资产是2.8元，那么发行价10元应该没问题。发行了6百万股新股，募集了6千万资金。而发行面值1元的股票，售价10元，多出的9元就会计入公积金。也就是多了5千4百万的公积金。<br>IPO后：股本1千6百万，公积金提高到5千6百万，未分配利润没变1千6百万，净资产8千8百万。<br>每股公积金：3.5元，每股未分配利润：1元，每股净资产：5.5元。</p><p>97年，公司开始玩送转游戏。 新股上市，在高增长，高送转的预期下，股价到达20元。<br>公司决定：10转10. 啥意思？ 就是每10股股票通过公积金转增股本10股。<br>总体数据：<br>原来是这样的（单位百万元）： 股本16 ， 公积金56， 未分配利润16， 净资产88<br>转增之后变成这样： 股本32， 公积金40， 未分配利润16， 净资产88<br>每股数据：<br>原来是这样的： 每股公积金：3.5元 每股未分配利润：1元 每股净资产：5.5元<br>转增之后变成这样： 每股公积金：1.25元 每股未分配利润：0.5元 每股净资产：2.75元</p><p>除权后股价从20元变成10元，每10股变成20股。 每股公积金大幅降低，每股净资产减半。</p><p>综上所述，公积金是个什么玩意？公积金就是净资产的一个部分，净资产的增加必须靠利润或者发行新股，公积金的值其实就是历年积累的利润×10%加上新股发行溢价。公积金不能动，所以和股本差不多，可以转成股本。 </p><p>每股公积金高意味着公司有高送转的潜力，送转对公司未来发展没有影响，对股东也没有派发红利，只是在财务上调整了一下数据。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;公积金就是从企业成立至今所获得的所有的利润中保留的一部分。&lt;br&gt;要理解资本公积金，必须结合 净资产，股本，未分配利润等 项目结合理解。&lt;br&gt;净资产=股本+资本公积金+未分配利润&lt;br&gt;举例来说：&lt;br&gt;公司1990年成立 股本是1千万。公司的净资产也是1千万。&lt;br&gt;一
      
    
    </summary>
    
    
      <category term="金融" scheme="https://shenyihan.github.io/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>hexo从零开始到搭建完整</title>
    <link href="https://shenyihan.github.io/2017/12/27/hello-world/"/>
    <id>https://shenyihan.github.io/2017/12/27/hello-world/</id>
    <published>2017-12-27T03:38:16.000Z</published>
    <updated>2017-12-30T04:43:25.567Z</updated>
    
    <content type="html"><![CDATA[<p>安装Git Bash<br>安装NodeJs<br>安装hexo<br>生成SSH并添加到github<br>部署项目<br>上传到github<br>绑定个人域名<br>修改及配置主题<br>添加RSS<br>添加评论<br>写文章部分</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;安装Git Bash&lt;br&gt;安装NodeJs&lt;br&gt;安装hexo&lt;br&gt;生成SSH并添加到github&lt;br&gt;部署项目&lt;br&gt;上传到github&lt;br&gt;绑定个人域名&lt;br&gt;修改及配置主题&lt;br&gt;添加RSS&lt;br&gt;添加评论&lt;br&gt;写文章部分&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="主页搭建" scheme="https://shenyihan.github.io/tags/%E4%B8%BB%E9%A1%B5%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
</feed>
